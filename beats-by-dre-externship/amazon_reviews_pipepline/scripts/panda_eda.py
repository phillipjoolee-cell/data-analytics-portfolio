# -*- coding: utf-8 -*-
"""panda_EDA

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Cghf57LRQCet74ZuJSIkSgIfVCdTd7aD
"""

import numpy as np
import pandas as pd

# Load dataset (NumPy-prepped Excel file)
df = pd.read_excel("Beats_Scraped_Data_NumPy_Prepped.xlsx")

print("Dataset shape:", df.shape)

# Step 2: Display the data
print("\n--- First 5 rows ---")
print(df.head())
print("\n--- Last 5 rows ---")
print(df.tail())

# Step 3: Descriptive statistics
print("\n--- Descriptive Statistics (numeric) ---")
print(df.describe(include=[np.number]))

print("\nMean rating:", df["rating"].mean())
print("Median rating:", df["rating"].median())
print("Mode rating:", df["rating"].mode()[0])
print("Variance rating:", df["rating"].var())
print("Standard Deviation rating:", df["rating"].std())

# Step 4: Identifying missing values
missing_values = df.isnull().sum()
print("\n--- Missing Values ---")
print(missing_values)

# Step 5: Handling missing values
df["rating"].fillna(df["rating"].mean(), inplace=True)

# Step 6: Checking for outliers (IQR method)
Q1 = df["rating"].quantile(0.25)
Q3 = df["rating"].quantile(0.75)
IQR = Q3 - Q1
outliers = df[(df["rating"] < (Q1 - 1.5 * IQR)) | (df["rating"] > (Q3 + 1.5 * IQR))]
print("\n--- Outliers in Rating ---")
print(outliers)

# Enhancement: Value counts for categorical columns
print("\n--- Verified Purchase Distribution ---")
print(df["is_verified"].value_counts())

print("\n--- Product Review Counts (top 5) ---")
print(df["product_id"].value_counts().head())

# Enhancement: Correlation matrix
print("\n--- Correlation Matrix ---")
print(df.corr(numeric_only=True))

# Step 7: Save cleaned dataset
df.to_excel("Beats_Scraped_Data_Pandas_EDA.xlsx", index=False, sheet_name="EDA_Results")
df.to_csv("Beats_Scraped_Data_Pandas_EDA.csv", index=False)

print("\nEDA complete. Dataset saved as Excel and CSV.")